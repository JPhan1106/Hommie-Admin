package com.hommie.service;

import java.lang.reflect.Field;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.data.util.ReflectionUtils;

import com.hommie.model.User;
import com.hommie.repository.UserRepository;

import jakarta.persistence.EntityNotFoundException;

@Service
public class UserService {
	
	@Autowired
	UserRepository userRepository;

	public User updateUserByFields(int id, Map<String, Object> fields) {
		User existingUser = userRepository.findById(id)
	            .orElseThrow(() -> new EntityNotFoundException("User not found"));
		
		for (Map.Entry<String, Object> entry : fields.entrySet()) {
			String fieldName = entry.getKey();
			Object value = entry.getValue();
			
			Field field = ReflectionUtils.findRequiredField(User.class, fieldName);
			
			field.setAccessible(true);
			ReflectionUtils.setField(field, existingUser, value);
        }
        
        return userRepository.save(existingUser);
	}
}